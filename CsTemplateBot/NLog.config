<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log">

  <variable name="verbose" value="${longdate}|${level:uppercase=true}|${logger}|${machinename}|${mdlc:item=originator}|${message}|${callsite:cleanNamesOfAnonymousDelegates=True:includeSourcePath=False}|${exception:format=ToString}"/>
  <variable name="verbose_inline" value="${replace:inner=${verbose}:searchFor=\\r\\n|\\n:replaceWith= :regex=true}"/>
  <variable name="justmessage_inline" value="${replace:inner=${message}:searchFor=\\r\\n|\\n:replaceWith= :regex=true}"/>
  <variable name="justexception_inline" value="${replace:inner=${exception:format=ToString}:searchFor=\\r\\n|\\n:replaceWith= :regex=true}"/>

  <variable name="logDir" value="D:\Logs\Bot\" />

  <targets async="true">
    <target name="logfile" xsi:type="File"
            fileName="${logDir}\LogFile${shortdate}.txt"
            layout="${verbose_inline}"
            archiveFileName="${logDir}\LogFile{#}.txt.zip"
            archiveEvery="Day"
            archiveNumbering="Date"
            archiveDateFormat="yyyy-MM-dd"
            enableArchiveFileCompression="true"
            maxArchiveFiles="7"
            concurrentWrites="false"
            keepFileOpen="false"
            encoding="iso-8859-2" />
    <target name="console" xsi:type="Console" layout="${verbose_inline}" />
    <target name="debugger" xsi:type="Debugger" layout="${logger}::${message}"/>
    <target name="database" xsi:type="Database"
          connectionStringName="TakeBotsConnectionString">
      <install-command ignoreFailures="false">
        <text>
          IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = N'dbo'  AND TABLE_NAME = N'Logs') RETURN;

          CREATE TABLE dbo.Logs
          (
          [Id] [int] IDENTITY(1,1) NOT NULL,
          [Timestamp] [datetimeoffset](4) NOT NULL,
          [Application] [varchar](50) NOT NULL,
          [Hostname] [varchar](50) NOT NULL,
          [Level] [varchar](10) NOT NULL,
          [User] [varchar](250),
          [Logger] [varchar](100) NOT NULL,
          [Message] nvarchar(max) NOT NULL,
          [Exception] nvarchar(max),
          [CallSite] [varchar](250) NOT NULL,
          [Extras] nvarchar(max),
          CONSTRAINT [PK_Logs] PRIMARY KEY CLUSTERED ([Id] DESC)
          )
        </text>
      </install-command>

      <commandText>
        INSERT INTO dbo.Logs ([Timestamp], [Application], [Hostname], [Level], [User], [Logger], [Message], [Exception], [CallSite], [Extras])
        VALUES (@Timestamp, @Application, @Hostname, @Level, @User, @Logger, @Message, @Exception, @CallSite, @Extras)
      </commandText>

      <parameter name="@Timestamp" layout="${longdate}${date:format= K}" />
      <parameter name="@application" layout="#{ServiceName}" />
      <parameter name="@Hostname" layout="${machinename}" />
      <parameter name="@level" layout="${level:uppercase=true}" />
      <parameter name="@user" layout="${mdlc:item=UserId}" />
      <parameter name="@logger" layout="${logger}" />
      <parameter name="@message" layout="${message}" />
      <parameter name="@exception" layout="${exception:tostring}" />
      <parameter name="@callSite" layout="${callsite:cleanNamesOfAnonymousDelegates=True:includeSourcePath=False}" />
      <parameter name="@Extras" layout="${mdlc:item=UserContext}" />
    </target>
    <target name="console" xsi:type="Console" layout="${verbose_inline}" />
  </targets>

  <rules>
    <logger name="*" minlevel="Warn" writeTo="database" />
    <logger name="*" minlevel="Trace" writeTo="logfile" />
  </rules>

</nlog>
